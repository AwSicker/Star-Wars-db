{"version":3,"sources":["components/header/header.js","services/swapi-service.js","components/spinner/spinner.js","components/planet-view/planet-view.js","components/error-indicator/error.png","components/error-indicator/error-indicator.js","components/random-planet/random-planet.js","services/mock-swapi-services.js","components/swapi-service-context/swapi-service.context.js","components/item-view/item-view.js","components/item-details/item-details.js","hocs/withData.js","hocs/with-swapi-service.js","components/sw-componenets/person-details.js","components/sw-componenets/planet-details.js","components/sw-componenets/starship-details.js","components/item-list/item-list.js","components/sw-componenets/item-lists.js","components/pages/people-page.js","components/pages/planet-page.js","components/pages/starship-page.js","components/pages/secret-page.js","components/pages/login-page.js","components/welcome-page/welcome-page.js","components/app/app.js","index.js"],"names":["Header","onDataChange","status","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","href","onClick","SwapiService","_apiBase","getResource","url","a","fetch","res","ok","Error","json","body","getAllPeople","results","map","_transformPerson","slice","getPerson","person","getPersonImg","getAllPlanets","_transformPlanet","getPlanet","planet","getPlanetImg","getAllShips","_transformShip","getStarShip","ship","getStarShipImg","_extractId","item","match","name","population","rotationPeriod","rotation_period","diameter","climate","gender","eyeColor","eye_color","birthYear","birth_year","model","manufacturer","cost","cost_in_credits","length","crew","starshipClass","starship_class","rating","hyperdrive_rating","Spinner","PlanetView","alt","src","ErrorIndicator","icon","RandomPlanet","swapiServices","state","loading","onPlanetLoaded","setState","error","onError","err","updatePlanet","Math","floor","random","then","catch","this","interval","setInterval","clearInterval","hasData","errorMessage","spinner","content","React","Component","MockSwapiServices","_people","_planets","_starships","createContext","SwapiServiceProvider","Provider","SwapiServiceConsumer","Consumer","ItemView","image","properties","Children","child","idx","cloneElement","Record","field","label","ItemDetails","updateItem","prevProps","props","itemId","getData","getImgUrl","children","withData","View","data","hasError","update","withSwapiService","mapMethodsToProps","Wrapped","swapiService","serviceProps","ItemList","onItemSelected","renderLabel","items","withChildFunction","fn","renderName","PersonList","compose","PlanetList","StarshipList","PeoplePage","withRouter","history","params","push","PlanetPage","selectedItem","StarshipPage","SecretPage","isLoggedIn","LoginPage","onLogin","WelcomePage","svgRef","createRef","useEffect","anime","targets","current","strokeDashoffset","setDashoffset","easing","duration","direction","loop","style","textAlign","width","height","ref","stroke","strokeWidth","fill","d","App","showRandomPlanet","toggleRandomPlanet","value","basename","process","exact","path","component","render","ReactDOM","document","getElementById"],"mappings":"iXAIaA,G,MAAS,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,aAAcC,EAAY,EAAZA,OAElC,OACI,sBAAKC,UAAU,sCAAf,UACI,cAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,oBAAvB,2BACA,wBAAQA,UAAU,iBAAiBE,KAAK,SAASC,cAAY,WAAWC,cAAY,iBAC5EC,gBAAc,gBAAgBC,gBAAc,OAAOC,aAAW,oBADtE,SAEI,sBAAMP,UAAU,0BAGpB,sBAAKA,UAAU,gCAAgCQ,GAAG,gBAAlD,UACI,qBAAIR,UAAU,qBAAd,UACI,oBAAIA,UAAU,WAAd,SACI,cAAC,IAAD,CAAMC,GAAG,WAAWD,UAAU,WAAWS,KAAK,IAA9C,sBAEJ,oBAAIT,UAAU,WAAd,SACI,cAAC,IAAD,CAAMC,GAAG,YAAYD,UAAU,WAAWS,KAAK,IAA/C,uBAEJ,oBAAIT,UAAU,WAAd,SACI,cAAC,IAAD,CAAMC,GAAG,cAAcD,UAAU,WAAWS,KAAK,IAAjD,yBAEJ,oBAAIT,UAAU,WAAd,SACI,cAAC,IAAD,CAAMC,GAAG,UAAUD,UAAU,WAAWS,KAAK,IAA7C,qBAEJ,oBAAIT,UAAU,WAAd,SACI,cAAC,IAAD,CAAMC,GAAG,WAAWD,UAAU,WAAWS,KAAK,IAA9C,yBAGR,oBAAIT,UAAU,WAAd,SACI,wBAAQA,UAAU,kBAAkBU,QAASZ,EAA7C,SAA4DC,c,uBChCnEY,EAAb,iDAEIC,SAFJ,8BAIIC,YAJJ,uCAIkB,WAAOC,GAAP,iBAAAC,EAAA,sEACQC,MAAM,GAAD,OAAI,EAAKJ,UAAT,OAAoBE,IADjC,WACJG,EADI,QAGDC,GAHC,sBAIA,IAAIC,MAAJ,0BAA6BL,EAA7B,sBAA8CG,EAAIlB,SAJlD,uBAOSkB,EAAIG,OAPb,cAOJC,EAPI,yBAQHA,GARG,2CAJlB,2DAgBIC,aAhBJ,sBAgBmB,4BAAAP,EAAA,sEACO,EAAKF,YAAL,WADP,cACLI,EADK,yBAEJA,EAAIM,QAAQC,IAAI,EAAKC,kBAAkBC,MAAM,EAAE,IAF3C,2CAhBnB,KAqBIC,UArBJ,uCAqBgB,WAAOnB,GAAP,eAAAO,EAAA,sEACa,EAAKF,YAAL,iBAA2BL,EAA3B,MADb,cACFoB,EADE,yBAED,EAAKH,iBAAiBG,IAFrB,2CArBhB,2DA0BIC,aAAe,SAACrB,GACZ,MAAM,0DAAN,OAAiEA,EAAjE,SA3BR,KA8BIsB,cA9BJ,sBA8BoB,4BAAAf,EAAA,sEACM,EAAKF,YAAL,YADN,cACNI,EADM,yBAELA,EAAIM,QAAQC,IAAI,EAAKO,kBAAkBL,MAAM,EAAE,IAF1C,2CA9BpB,KAmCIM,UAnCJ,uCAmCgB,WAAOxB,GAAP,eAAAO,EAAA,sEACW,EAAKF,YAAL,kBAA4BL,IADvC,cACJyB,EADI,yBAEH,EAAKF,iBAAiBE,IAFnB,2CAnChB,2DAwCIC,aAAe,SAAC1B,GACZ,MAAM,uDAAN,OAA8DA,EAA9D,SAzCR,KA4CI2B,YA5CJ,sBA4CkB,4BAAApB,EAAA,sEACQ,EAAKF,YAAL,cADR,cACJI,EADI,yBAEJA,EAAIM,QAAQC,IAAI,EAAKY,gBAAgBV,MAAM,EAAE,IAFzC,2CA5ClB,KAiDIW,YAjDJ,uCAiDkB,WAAO7B,GAAP,eAAAO,EAAA,sEACS,EAAKF,YAAL,oBAA8BL,IADvC,cACJ8B,EADI,yBAEH,EAAKF,eAAeE,IAFjB,2CAjDlB,2DAsDIC,eAAiB,SAAC/B,GACd,MAAM,yDAAN,OAAgEA,EAAhE,SAvDR,KA0DIgC,WAAa,SAACC,GAEV,OAAOA,EAAK3B,IAAI4B,MADC,iBACe,IA5DxC,KA+DIX,iBAAmB,SAACE,GAChB,MAAO,CACHzB,GAAI,EAAKgC,WAAWP,GACpBU,KAAMV,EAAOU,KACbC,WAAYX,EAAOW,WACnBC,eAAgBZ,EAAOa,gBACvBC,SAAUd,EAAOc,SACjBC,QAASf,EAAOe,UAtE5B,KA0EIvB,iBAAmB,SAACG,GAChB,MAAO,CACHpB,GAAI,EAAKgC,WAAWZ,GACpBe,KAAMf,EAAOe,KACbM,OAAQrB,EAAOqB,OACfC,SAAUtB,EAAOuB,UACjBC,UAAWxB,EAAOyB,aAhF9B,KAoFIjB,eAAiB,SAACE,GACd,MAAO,CACH9B,GAAI,EAAKgC,WAAWF,GACpBK,KAAML,EAAKK,KACXW,MAAOhB,EAAKgB,MACZC,aAAcjB,EAAKiB,aACnBC,KAAMlB,EAAKmB,gBACXC,OAAQpB,EAAKoB,OACbC,KAAMrB,EAAKqB,KACXC,cAAetB,EAAKuB,eACpBC,OAAQxB,EAAKyB,qBC5FZC,G,MAAU,WACvB,OACI,qBAAKhE,UAAU,4CAAf,SACI,sBAAKA,UAAU,oBAAf,UACI,wBACA,wBACA,8BACI,0BAEJ,8BACI,iCCVHiE,G,MAAa,SAAC,GAAc,IAAbhC,EAAY,EAAZA,OACjBzB,EAAkDyB,EAAlDzB,GAAImC,EAA8CV,EAA9CU,KAAMC,EAAwCX,EAAxCW,WAAYC,EAA4BZ,EAA5BY,eAAgBE,EAAYd,EAAZc,SAE7C,OACI,qCACI,qBAAK/C,UAAU,aAAakE,IAAI,SAASC,IAAG,8DAAyD3D,EAAzD,UAC5C,sBAAKR,UAAU,cAAf,UACI,oBAAIA,UAAU,cAAd,SAA6B2C,IAC7B,qBAAI3C,UAAU,oBAAd,UACI,qBAAIA,UAAU,kBAAd,UACI,sBAAMA,UAAU,aAAhB,yBACA,+BAAO4C,OAEX,qBAAI5C,UAAU,kBAAd,UACI,sBAAMA,UAAU,aAAhB,8BACA,+BAAO6C,OAEX,qBAAI7C,UAAU,kBAAd,UACI,sBAAMA,UAAU,aAAhB,uBACA,+BAAO+C,kBCtBhB,G,MAAA,IAA0B,mCCI5BqB,EAAiB,WAC1B,OACI,sBAAKpE,UAAU,kBAAf,UACI,qBAAKA,UAAU,YAAf,SACA,qBAAKA,UAAU,YAAamE,IAAKE,EAAMH,IAAI,iBAE3C,qBAAIlE,UAAU,gBAAd,UACI,oBAAIA,UAAU,kBAAd,SACI,sBAAMA,UAAU,qBAAhB,qBAEJ,oBAAIA,UAAU,kBAAd,SACI,0DAEJ,oBAAIA,UAAU,kBAAd,SACI,+DCZPsE,EAAb,4MAEIC,cAAgB,IAAI5D,EAFxB,EAII6D,MAAQ,CACJvC,OAAQ,GACRwC,SAAS,GANjB,EAkBIC,eAAiB,SAACzC,GACd,EAAK0C,SAAS,CACV1C,SACAwC,SAAS,EACTG,OAAO,KAtBnB,EA0BIC,QAAU,SAACC,GACP,EAAKH,SAAS,CACTC,OAAM,EACNH,SAAS,KA7BtB,EAiCIM,aAAe,WACX,IAAMvE,EAAKwE,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,EAChD,EAAKX,cACAvC,UAAUxB,GACV2E,KAAK,EAAKT,gBACVU,MAAM,EAAKP,UAtCpB,kEAUQQ,KAAKN,eACLM,KAAKC,SAAWC,YAAYF,KAAKN,aAAa,QAXtD,6CAeQS,cAAcH,KAAKC,YAf3B,+BAyCc,IAAD,EAC8BD,KAAKb,MAAhCvC,EADH,EACGA,OAAQwC,EADX,EACWA,QAASG,EADpB,EACoBA,MAEnBa,IAAYhB,GAAWG,GACvBc,EAAed,EAAQ,cAAC,EAAD,IAAoB,KAC3Ce,EAAUlB,EAAU,cAAC,EAAD,IAAa,KACjCmB,EAAUH,EAAU,cAAC,EAAD,CAAYxD,OAAQA,IAAY,KAE1D,OACI,sBAAKjC,UAAU,yCAAf,UACK0F,EACAC,EACAC,SArDjB,GAAkCC,IAAMC,WCN3BC,EAAb,iDAEIC,QAAU,CACN,CACIxF,GAAI,EACJmC,KAAM,4BACNM,OAAQ,OACRG,UAAW,WACXF,SAAU,cAGd,CACI1C,GAAI,EACJmC,KAAM,4BACNM,OAAQ,SACRG,UAAW,WACXF,SAAU,WAhBtB,KAoBI+C,SAAW,CACP,CACIzF,GAAI,EACJmC,KAAM,oBACNC,WAAY,gBACZC,eAAgB,sBAChBE,SAAU,YACVC,QAAS,SAEb,CACIxC,GAAI,EACJmC,KAAM,oBACNC,WAAY,YACZC,eAAgB,WAChBE,SAAU,YACVC,QAAS,UAnCrB,KAuCIkD,WAAa,CACT,CACI1F,GAAI,EACJmC,KAAM,6BACNW,MAAO,aACPC,aAAc,gCACdC,KAAM,aA7ClB,KAiDIlC,aAjDJ,sBAiDmB,sBAAAP,EAAA,+EACJ,EAAKiF,SADD,2CAjDnB,KAqDIrE,UArDJ,sBAqDgB,sBAAAZ,EAAA,+EACD,EAAKiF,QAAQ,IADZ,2CArDhB,KAyDIlE,cAzDJ,sBAyDoB,sBAAAf,EAAA,+EACL,EAAKkF,UADA,2CAzDpB,KA6DIjE,UA7DJ,sBA6DgB,sBAAAjB,EAAA,+EACD,EAAKkF,SAAS,IADb,2CA7DhB,KAiEI9D,YAjEJ,sBAiEkB,sBAAApB,EAAA,+EACH,EAAKmF,YADF,2CAjElB,KAqEI7D,YArEJ,sBAqEkB,sBAAAtB,EAAA,+EACH,EAAKmF,WAAW,IADb,2CArElB,KAyEIrE,aAAe,WACX,MAAM,uCA1Ed,KA6EIU,eAAiB,WACb,MAAM,qCA9Ed,KAiFIL,aAAe,WACX,MAAM,wC,EC7EV2D,IAAMM,gBAFMC,E,EAAVC,SACUC,E,EAAVC,S,OCFOC,G,MAAW,SAAC,GAA+B,IAA9B/D,EAA6B,EAA7BA,KAAMgE,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,WACvC,OACI,qCACA,qBAAK1G,UAAU,aAAakE,IAAI,OACvBC,IAAKsC,IACV,sBAAKzG,UAAU,cAAf,UACI,oBAAIA,UAAU,cAAd,SAA6ByC,EAAKE,OAClC,oBAAI3C,UAAU,oBAAd,SAEQ6F,IAAMc,SAASnF,IAAIkF,GAAY,SAACE,EAAMC,GAClC,OAAOhB,IAAMiB,aAAaF,EAAO,CAAEnE,sBCP9CsE,EAAS,SAAC,GAA0B,IAAzBtE,EAAwB,EAAxBA,KAAMuE,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,MACjC,OACI,qBAAIjH,UAAU,kBAAd,UACI,sBAAMA,UAAU,aAAhB,SAA8BiH,IAC9B,+BAAOxE,EAAKuE,SAKXE,EAAb,4MACI1C,MAAQ,CACJ/B,KAAO,KACPgE,MAAO,KACPhC,SAAS,GAJjB,kEAQQY,KAAK8B,aACL9B,KAAKV,SAAS,CAACF,SAAS,MAThC,yCAYuB2C,GACZ/B,KAAKgC,MAAMC,SAAWF,EAAUE,QAC/BjC,KAAKgC,MAAME,UAAYH,EAAUG,SACjClC,KAAKgC,MAAMG,YAAcJ,EAAUI,WACnCnC,KAAK8B,eAhBjB,mCAoBkB,IAAD,SAC8B9B,KAAKgC,MAApCC,EADC,EACDA,OAAQC,EADP,EACOA,QAASC,EADhB,EACgBA,UACrBF,GAGAC,EAAQD,GACPnC,MAAK,SAAC1C,GAAD,OAAU,EAAKkC,SAAS,CAC1BlC,OACAgE,MAAOe,EAAU/E,EAAKjC,WA5BtC,+BAiCQ,GAAuB,OAApB6E,KAAKb,MAAM/B,KACV,OAAO,8DAFN,MAK4B4C,KAAKb,MAA9B/B,EALH,EAKGA,KAAMgE,EALT,EAKSA,MAAOhC,EALhB,EAKgBA,QACfmB,EAAU,cAAC,EAAD,CAAUnD,KAAMA,EAAMgE,MAAOA,EAAOC,WAAYrB,KAAKgC,MAAMI,WACxE,OACC,qBAAKzH,UAAU,kDAAf,SACMyE,EAAU,cAAC,EAAD,IAAamB,QAzCzC,GAAiCC,IAAMC,WCsDxB4B,EAhEE,SAACC,GACd,mNAEInD,MAAQ,CACJoD,KAAM,KACNC,UAAU,EACVpD,SAAS,GALjB,iEAQuB2C,GACZ/B,KAAKgC,MAAME,UAAYH,EAAUG,SAChClC,KAAKyC,WAVjB,0CAeIzC,KAAKyC,WAfT,+BAkBa,IAAD,OACJzC,KAAKV,SAAS,CACVF,SAAS,IAGdY,KAAKgC,MAAME,UACLpC,MAAK,SAACyC,GACH,EAAKjD,SAAS,CACViD,OACAnD,SAAS,SA3B7B,0CAiCQY,KAAKV,SAAS,CACVkD,UAAU,MAlCtB,+BAsCc,IAAD,EAC6BxC,KAAKb,MAAhCoD,EADF,EACEA,KAAMC,EADR,EACQA,SAEb,OAHK,EACkBpD,QAGb,cAAC,EAAD,IAGNoD,EACO,cAAC,EAAD,IAGND,EAQE,cAACD,EAAD,2BAAUtC,KAAKgC,OAAf,IAAsBO,KAAMA,KAN3B,oBAAI5H,UAAU,wBAAd,SACI,cAAC,EAAD,UApDpB,GAAqB6F,IAAMC,YCehBiC,EAjBU,SAACC,GAAD,OAAuB,SAACC,GAC7C,OAAO,SAACZ,GACJ,OACI,cAACf,EAAD,UAEQ,SAAC4B,GACG,IAAMC,EAAeH,EAAkBE,GACvC,OACI,cAACD,EAAD,2BAAaZ,GAAWc,UCUrCJ,KAPW,SAACG,GACvB,MAAO,CACHX,QAASW,EAAavG,UACtB6F,UAAWU,EAAarG,gBAIjBkG,EAjBO,SAACV,GACnB,OACI,eAAC,EAAD,2BAAiBA,GAAjB,cACI,cAAC,EAAD,CAAQL,MAAM,YAAYC,MAAM,eAChC,cAAC,EAAD,CAAQD,MAAM,WAAWC,MAAM,eAC/B,cAAC,EAAD,CAAQD,MAAM,SAASC,MAAM,mBCY1Bc,KAPW,SAACG,GACvB,MAAO,CACHX,QAASW,EAAalG,UACtBwF,UAAWU,EAAahG,gBAIjB6F,EAjBO,SAACV,GACH,OACI,eAAC,EAAD,2BAAiBA,GAAjB,cACI,cAAC,EAAD,CAAQL,MAAM,WAAWC,MAAM,cAC/B,cAAC,EAAD,CAAQD,MAAM,UAAUC,MAAM,aAC9B,cAAC,EAAD,CAAQD,MAAM,aAAaC,MAAM,uBCgB9Cc,KAPW,SAACG,GACvB,MAAO,CACHX,QAASW,EAAa7F,YACtBmF,UAAWU,EAAa3F,kBAIjBwF,EArBS,SAACV,GACrB,OACoB,eAAC,EAAD,2BAAiBA,GAAjB,cACI,cAAC,EAAD,CAAQL,MAAM,QAAQC,MAAM,WAC5B,cAAC,EAAD,CAAQD,MAAM,eAAeC,MAAM,kBACnC,cAAC,EAAD,CAAQD,MAAM,OAAOC,MAAM,UAC3B,cAAC,EAAD,CAAQD,MAAM,SAASC,MAAM,YAC7B,cAAC,EAAD,CAAQD,MAAM,OAAOC,MAAM,UAC3B,cAAC,EAAD,CAAQD,MAAM,gBAAgBC,MAAM,WACpC,cAAC,EAAD,CAAQD,MAAM,SAASC,MAAM,mBCV3CmB,G,MAAW,SAACf,GAAY,IAC3BO,EAA+CP,EAA/CO,KAAMS,EAAyChB,EAAzCgB,eAA0BC,EAAejB,EAAzBI,SAEvBc,EAAQX,EAAKpG,KAAI,SAACiB,GAAU,IACnBjC,EAAMiC,EAANjC,GACDyG,EAAQqB,EAAY7F,GAC1B,OACI,oBAAIzC,UAAU,4BAEVU,QAAS,kBAAM2H,EAAe7H,IAFlC,SAGIyG,GAFKzG,MAOjB,OACI,qBAAKR,UAAU,cAAf,SACQ,oBAAIA,UAAU,0CAAd,SACKuI,Q,QCfnBC,EAAoB,SAACC,GAAD,OAAQ,SAACR,GACnC,OAAO,SAACZ,GACJ,OACJ,cAACY,EAAD,2BAAaZ,GAAb,aACKoB,QAMCC,EAAa,SAAC,GAAD,IAAE/F,EAAF,EAAEA,KAAF,OAAY,+BAAOA,KAqBhCgG,EAAaC,YACfb,GAnB4B,SAACG,GAC7B,MAAO,CACHX,QAASW,EAAa5G,iBAkB1BoG,EACAc,EAAkBE,GAHHE,CAIlBR,GAEKS,EAAaD,YACfb,GAnB4B,SAACG,GAC7B,MAAO,CACHX,QAASW,EAAapG,kBAkB1B4F,EACAc,EAAkBE,GAHHE,CAIlBR,GACKU,EAAeF,YACjBb,GAlB8B,SAACG,GAC/B,MAAO,CACHX,QAASW,EAAa/F,gBAiB1BuF,EACAc,GAlC2B,SAAC,GAAD,IAAE7F,EAAF,EAAEA,KAAMW,EAAR,EAAQA,MAAR,OAAmB,iCAAOX,EAAP,KAAeW,EAAf,UA+B7BsF,CAIpBR,GC/BYW,EAAaC,aAdE,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,QAClBzI,EADsC,EAAXkC,MACdwG,OAAb1I,GACJ,OACQ,sBAAKR,UAAU,MAAf,UACJ,qBAAKA,UAAU,WAAf,SACI,cAAC2I,EAAD,CAAYN,eAAgB,SAAC7H,GAAD,OAAQyI,EAAQE,KAAK3I,QAEzD,qBAAKR,UAAU,WAAf,SACI,cAAC,EAAD,CAAesH,OAAQ9G,YCTtB4I,EAAb,4MACI5E,MAAQ,CACJ6E,aAAc,MAFtB,EAKIhB,eAAiB,SAACgB,GACd,EAAK1E,SAAS,CACV0E,kBAPZ,uDAYQ,OACI,sBAAKrJ,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,cAAC6I,EAAD,CAAYR,eAAgBhD,KAAKgD,mBAErC,qBAAKrI,UAAU,WAAf,SACI,cAAC,EAAD,CAAesH,OAAQjC,KAAKb,MAAM6E,wBAlBtD,GAAgCxD,IAAMC,WCQzBwD,EAAeN,aARE,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACzB,OACQ,qBAAKjJ,UAAU,YAAf,SACI,cAAC8I,EAAD,CAAcT,eAAgB,SAACf,GAAD,OAAY2B,EAAQE,KAAK7B,WCP9DiC,EAAa,SAAC,GAEvB,OAFwC,EAAhBC,WAKhB,qBAAKxJ,UAAU,wBAAf,SACI,kEAKL,cAAC,IAAD,CAAUC,GAAG,YCVXwJ,EAAY,SAAC,GAA2B,IAA1BD,EAAyB,EAAzBA,WAAYE,EAAa,EAAbA,QAE/B,OAAGF,EACI,cAAC,IAAD,CAAUvJ,GAAG,MAGpB,sBAAKD,UAAU,YAAf,UACI,0DACA,wBACIA,UAAU,kBACVU,QAASgJ,EAFb,uB,QCPCC,G,MAAc,WACvB,IAAMC,EAAS/D,IAAMgE,YAarB,OAXAC,qBAAU,WACNC,YAAM,CACFC,QAASJ,EAAOK,QAAQxC,SACxByC,iBAAkB,CAACH,IAAMI,cAAe,GACxCC,OAAQ,gBACRC,SAAU,IACVC,UAAW,YACXC,MAAM,OAKhB,qBAAKC,MAAO,CAACC,UAAU,UAAvB,SACI,sBAAKC,MAAM,MAAMC,OAAO,MAAMnK,GAAG,eAAeoK,IAAKhB,EAArD,UACI,sBAAMiB,OAAO,SAASC,YAAY,IAAIC,KAAK,OACrCC,EAAE,ipEACFhL,UAAU,QAAQQ,GAAG,iBAC3B,sBAAMqK,OAAO,SAASC,YAAY,IAAIC,KAAK,OACrCC,EAAE,soFACFhL,UAAU,QAAQQ,GAAG,iBAC3B,sBAAMqK,OAAO,SAASC,YAAY,IAAIC,KAAK,OACrCC,EAAE,ywFACFhL,UAAU,QAAQQ,GAAG,wBChBxByK,G,MAAb,4MAEIzG,MAAQ,CACJ0G,kBAAkB,EAClBrD,UAAU,EACVK,aAAc,IAAIvH,EAClB6I,YAAY,GANpB,EASIE,QAAU,WACN,EAAK/E,SAAS,CACV6E,YAAY,KAXxB,EAeI1J,aAAe,WACf,EAAK6E,UAAS,YAGV,MAAO,CACHuD,aAAc,IAJY,EAAlBA,wBAC4BvH,EAAeoF,EAAoBpF,QAjBnF,EAyBGwK,mBAAqB,WAChB,EAAKxG,UAAS,SAACH,GACX,MAAO,CACH0G,kBAAmB1G,EAAM0G,sBA5BzC,kEAkCQ7F,KAAKV,SAAS,CACVkD,UAAU,MAnCtB,+BAuCc,IAAD,OAEE2B,EAAcnE,KAAKb,MAAnBgF,WAEP,GAAGnE,KAAKb,MAAMqD,SACV,OAAO,cAAC,EAAD,IAGX,IAAM5F,EAASoD,KAAKb,MAAM0G,iBAAmB,cAAC,EAAD,IAAkB,KACzDnL,EAASsF,KAAKb,MAAM0D,wBAAwBvH,EAAe,gBAAkB,eACnF,OACI,cAACyF,EAAD,CAAsBgF,MAAO/F,KAAKb,MAAM0D,aAAxC,SACI,cAAC,IAAD,CAAYmD,SAAUC,gBAAtB,SACJ,gCACI,cAAC,EAAD,CAAQxL,aAAcuF,KAAKvF,aAAcC,OAAQA,IAChDkC,EACD,wBACI/B,KAAK,SAASF,UAAU,uCACxBU,QAAS2E,KAAK8F,mBAFlB,kCAKA,eAAC,IAAD,WACA,cAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,IAAIC,UAAW9B,IACzB,cAAC,IAAD,CAAO4B,OAAK,EAACC,KAAK,eAAeC,UAAW1C,IAC5C,cAAC,IAAD,CAAOwC,OAAK,EAACC,KAAK,WAAWC,UAAWrC,IACxC,cAAC,IAAD,CAAOmC,OAAK,EAACC,KAAK,aAAaC,UAAWnC,IAC1C,cAAC,IAAD,CAAOiC,OAAK,EAACC,KAAK,iBACXE,OAAQ,YAAgB,IACblL,EADY,EAAZkC,MACYwG,OAAZ1I,GACT,OAAQ,cAAC,EAAD,CAAiB8G,OAAQ9G,OAEnC,cAAC,IAAD,CACIgL,KAAK,SACLE,OAAQ,kBACR,cAAC,EAAD,CAAWlC,WAAYA,EAAYE,QAAS,EAAKA,aAEhE,cAAC,IAAD,CACI8B,KAAK,UACLE,OAAQ,kBACJ,cAAC,EAAD,CAAYlC,WAAYA,OAEhC,cAAC,IAAD,CAAOkC,OAAQ,kBAAM,iEAhFzC,GAAyB7F,IAAMC,YCR/B6F,IAASD,OACL,cAAC,EAAD,IAAQE,SAASC,eAAe,W","file":"static/js/main.470431de.chunk.js","sourcesContent":["import React from 'react'\nimport './header.css'\nimport {Link} from \"react-router-dom\";\n\nexport const Header = ({onDataChange, status}) => {\n\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-dark\">\n            <Link to=\"/\" className=\"navbar-brand logo\"> Star Wars DB</Link>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor02\"\n                    aria-controls=\"navbarColor02\" aria-expanded=\"true\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"/>\n            </button>\n\n            <div className=\"navbar-collapse collapse show\" id=\"navbarColor02\">\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item\">\n                        <Link to=\"/people/\" className=\"nav-link\" href=\"#\">People</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to=\"/planets/\" className=\"nav-link\" href=\"#\">Planets</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to=\"/starships/\" className=\"nav-link\" href=\"#\">Starships</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to=\"/login/\" className=\"nav-link\" href=\"#\">Login</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to=\"/secret/\" className=\"nav-link\" href=\"#\">Secret</Link>\n                    </li>\n                </ul>\n                <li className=\"nav-item\">\n                    <button className=\"btn btn-success\" onClick={onDataChange}>{status}</button>\n                </li>\n            </div>\n        </nav>\n    );\n};\n","\r\nexport class SwapiService {\r\n\r\n    _apiBase = `https://swapi.dev/api/`;\r\n\r\n    getResource = async (url) => {\r\n        const res = await fetch(`${this._apiBase}${url}`);\r\n\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, received ${res.status}`)\r\n        }\r\n\r\n        const body = await res.json();\r\n        return body;\r\n\r\n    }\r\n\r\n    getAllPeople = async () => {\r\n        const res = await this.getResource(`people/`);\r\n        return res.results.map(this._transformPerson).slice(0,5);\r\n    }\r\n\r\n    getPerson = async (id) => {\r\n        const person = await this.getResource(`people/${id}/`);\r\n        return this._transformPerson(person);\r\n    }\r\n\r\n    getPersonImg = (id) => {\r\n        return `https://starwars-visualguide.com/assets/img/characters/${id}.jpg`\r\n    }\r\n\r\n    getAllPlanets = async () => {\r\n        const res = await this.getResource(`planets/`);\r\n        return res.results.map(this._transformPlanet).slice(0,5);\r\n    }\r\n\r\n    getPlanet = async (id) => {\r\n      const planet = await this.getResource(`planets/${id}`);\r\n      return this._transformPlanet(planet);\r\n    }\r\n\r\n    getPlanetImg = (id) => {\r\n        return `https://starwars-visualguide.com/assets/img/planets/${id}.jpg`\r\n    }\r\n\r\n    getAllShips = async () => {\r\n        const res = await this.getResource(`starships/`);\r\n       return res.results.map(this._transformShip).slice(2,7);\r\n    }\r\n\r\n    getStarShip = async (id) => {\r\n        const ship = await this.getResource(`starships/${id}`);\r\n        return this._transformShip(ship);\r\n    }\r\n\r\n    getStarShipImg = (id) => {\r\n        return `https://starwars-visualguide.com/assets/img/starships/${id}.jpg`\r\n    }\r\n\r\n    _extractId = (item) => {\r\n        const idRegExp = /\\/([0-9]*)\\/$/\r\n        return item.url.match(idRegExp)[1]\r\n    }\r\n\r\n    _transformPlanet = (planet) => {\r\n        return {\r\n            id: this._extractId(planet),\r\n            name: planet.name,\r\n            population: planet.population,\r\n            rotationPeriod: planet.rotation_period,\r\n            diameter: planet.diameter,\r\n            climate: planet.climate\r\n        }\r\n    }\r\n\r\n    _transformPerson = (person) => {\r\n        return {\r\n            id: this._extractId(person),\r\n            name: person.name,\r\n            gender: person.gender,\r\n            eyeColor: person.eye_color,\r\n            birthYear: person.birth_year,\r\n        }\r\n    }\r\n\r\n    _transformShip = (ship) => {\r\n        return {\r\n            id: this._extractId(ship),\r\n            name: ship.name,\r\n            model: ship.model,\r\n            manufacturer: ship.manufacturer,\r\n            cost: ship.cost_in_credits,\r\n            length: ship.length,\r\n            crew: ship.crew,\r\n            starshipClass: ship.starship_class,\r\n            rating: ship.hyperdrive_rating\r\n        }\r\n    }\r\n}\r\n","import React from 'react'\r\nimport './spinner.css'\r\n\r\nexport const Spinner = () => {\r\nreturn (\r\n    <div className=\"loadingio-spinner-double-ring-e12yjtbnsu8\">\r\n        <div className=\"ldio-0yzaz0qjte7i\">\r\n            <div/>\r\n            <div/>\r\n            <div>\r\n                <div/>\r\n            </div>\r\n            <div>\r\n                <div/>\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n}\r\n","import React from \"react\";\r\nimport './planet-view.css'\r\n\r\nexport const PlanetView = ({planet}) => {\r\n    const {id, name, population, rotationPeriod, diameter} = planet\r\n\r\n    return(\r\n        <>\r\n            <img className=\"planet-img\" alt=\"planet\" src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`}/>\r\n            <div className=\"planet-info\">\r\n                <h4 className=\"planet-name\">{name}</h4>\r\n                <ul className=\"list-group-flush \">\r\n                    <li className=\"list-group-item\">\r\n                        <span className=\"info-title\">Population:</span>\r\n                        <span>{population}</span>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <span className=\"info-title\">Rotation Period:</span>\r\n                        <span>{rotationPeriod}</span>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <span className=\"info-title\">Diameter:</span>\r\n                        <span>{diameter}</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/error.9e877915.png\";","import React from 'react';\r\nimport \"./error-indicator.css\"\r\nimport icon from \"./error.png\"\r\n\r\nexport const ErrorIndicator = () => {\r\n    return(\r\n        <div className=\"error-container\">\r\n            <div className=\"error-img\">\r\n            <img className=\"error-img\"  src={icon} alt=\"error icon\"/>\r\n            </div>\r\n            <ul className=\"error-message\">\r\n                <li className=\"error-list-item\">\r\n                    <span className=\"error-message--ups\">Error</span>\r\n                </li>\r\n                <li className=\"error-list-item\">\r\n                    <span>something went wrong</span>\r\n                </li>\r\n                <li className=\"error-list-item\">\r\n                    <span>try again later...</span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport {SwapiService} from '../../services/swapi-service'\r\nimport {Spinner} from \"../spinner\";\r\nimport {PlanetView} from \"../planet-view\"\r\nimport {ErrorIndicator} from \"../error-indicator\";\r\n\r\nexport class RandomPlanet extends React.Component{\r\n\r\n    swapiServices = new SwapiService();\r\n\r\n    state = {\r\n        planet: {},\r\n        loading: true,\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.updatePlanet();\r\n        this.interval = setInterval(this.updatePlanet,1500)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    onPlanetLoaded = (planet) => {\r\n        this.setState({\r\n            planet,\r\n            loading: false,\r\n            error: false\r\n        });\r\n    };\r\n\r\n    onError = (err) => {\r\n        this.setState({\r\n             error:true,\r\n             loading: false,\r\n        });\r\n    };\r\n\r\n    updatePlanet = () => {\r\n        const id = Math.floor(Math.random() * 15) + 3;\r\n    this.swapiServices\r\n        .getPlanet(id)\r\n        .then(this.onPlanetLoaded)\r\n        .catch(this.onError);\r\n    }\r\n\r\n    render() {\r\n        const { planet, loading, error } = this.state;\r\n\r\n        const hasData = !(loading || error)\r\n        const errorMessage = error ? <ErrorIndicator/> : null\r\n        const spinner = loading ? <Spinner/> : null;\r\n        const content = hasData ? <PlanetView planet={planet}/> : null;\r\n\r\n        return (\r\n            <div className=\"random-planet jumbotron rounded d-flex\">\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\n","export class MockSwapiServices {\r\n\r\n    _people = [\r\n        {\r\n            id: 1,\r\n            name: 'Bilbo Baggins [TEST DATA]',\r\n            gender: 'male',\r\n            birthYear: 'long ago',\r\n            eyeColor: 'dark brown'\r\n        },\r\n\r\n        {\r\n            id: 2,\r\n            name: 'Frodo Baggins [TEST DATA]',\r\n            gender: 'female',\r\n            birthYear: 'long ago',\r\n            eyeColor: 'blonde'\r\n        }\r\n    ];\r\n\r\n    _planets = [\r\n        {\r\n            id: 1,\r\n            name: 'Earth [TEST DATA]',\r\n            population: '7.530.000.000',\r\n            rotationPeriod: '23 hours 56 seconds',\r\n            diameter: '12.742 km',\r\n            climate: 'rainy'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Venus [TEST DATA]',\r\n            population: 'not known',\r\n            rotationPeriod: '243 days',\r\n            diameter: '12.104 km',\r\n            climate: 'rainy'\r\n        }\r\n    ];\r\n\r\n    _starships = [\r\n        {\r\n            id: 1,\r\n            name: 'USS Enterprise [TEST DATA]',\r\n            model: 'NCC-1701-C',\r\n            manufacturer: 'Northrop Grumman Shipbuilding',\r\n            cost: \"10000000\"\r\n        }\r\n    ];\r\n\r\n    getAllPeople = async () => {\r\n        return this._people;\r\n    };\r\n\r\n    getPerson = async () => {\r\n        return this._people[0];\r\n    };\r\n\r\n    getAllPlanets = async () => {\r\n        return this._planets;\r\n    };\r\n\r\n    getPlanet = async () => {\r\n        return this._planets[0]\r\n    };\r\n\r\n    getAllShips = async () => {\r\n        return this._starships;\r\n    };\r\n\r\n    getStarShip = async () => {\r\n        return this._starships[0];\r\n    };\r\n\r\n    getPersonImg = () => {\r\n        return `https://placeimg.com/400/500/people`\r\n    };\r\n\r\n    getStarShipImg = () => {\r\n        return `https://placeimg.com/600/400/tech`;\r\n    };\r\n\r\n    getPlanetImg = () => {\r\n        return `https://placeimg.com/400/400/nature`\r\n    };\r\n}\r\n","import React from \"react\"\r\n\r\nconst {\r\n      Provider: SwapiServiceProvider,\r\n      Consumer: SwapiServiceConsumer\r\n} = React.createContext();\r\n\r\nexport {SwapiServiceConsumer,SwapiServiceProvider};\r\n","import React from 'react';\r\n\r\nexport const ItemView = ({item, image, properties}) => {\r\nreturn(\r\n    <>\r\n    <img className=\"person-img\" alt=\"item\"\r\n             src={image}/>\r\n        <div className=\"person-info\">\r\n            <h4 className=\"person-name\">{item.name}</h4>\r\n            <ul className=\"list-group-flush \">\r\n                {\r\n                    React.Children.map(properties, (child,idx) => {\r\n                        return React.cloneElement(child, { item })\r\n                    })\r\n                }\r\n            </ul>\r\n        </div>\r\n    </>\r\n)\r\n}\r\n","import React from 'react';\r\nimport './item-details.css'\r\nimport {Spinner} from \"../spinner/\";\r\nimport {ItemView} from \"../item-view\"\r\n\r\nexport const Record = ({item, field, label}) => {\r\n    return(\r\n        <li className=\"list-group-item\">\r\n            <span className=\"info-title\">{label}</span>\r\n            <span>{item[field]}</span>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport class ItemDetails extends React.Component {\r\n    state = {\r\n        item : null,\r\n        image: null,\r\n        loading: true,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateItem();\r\n        this.setState({loading: false})\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.itemId !== prevProps.itemId ||\r\n            this.props.getData !== prevProps.getData ||\r\n            this.props.getImgUrl !== prevProps.getImgUrl) {\r\n            this.updateItem();\r\n        }\r\n    }\r\n\r\n    updateItem() {\r\n        const { itemId, getData, getImgUrl } = this.props;\r\n        if(!itemId){\r\n            return;\r\n        }\r\n            getData(itemId)\r\n            .then((item) => this.setState({\r\n                item,\r\n                image: getImgUrl(item.id),\r\n            }));\r\n            }\r\n\r\n    render() {\r\n        if(this.state.item === null){\r\n            return <p>Select any option from a list</p>\r\n        }\r\n\r\n        const { item, image, loading } = this.state\r\n        const content = <ItemView item={item} image={image} properties={this.props.children}/>\r\n           return(\r\n            <div className=\"jumbotron rounded d-flex item-section col-md-12\">\r\n                { loading ? <Spinner/> : content}\r\n            </div>\r\n           )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {Spinner} from \"../components/spinner\";\r\nimport {ErrorIndicator} from \"../components/error-indicator\";\r\n\r\nconst withData = (View) => {\r\n    return class extends React.Component {\r\n\r\n        state = {\r\n            data: null,\r\n            hasError: false,\r\n            loading: false\r\n        };\r\n\r\n        componentDidUpdate(prevProps) {\r\n            if(this.props.getData !== prevProps.getData) {\r\n                this.update();\r\n            }\r\n        }\r\n\r\n        componentDidMount() {\r\n        this.update();\r\n        }\r\n\r\n        update(){\r\n            this.setState({\r\n                loading: true\r\n            })\r\n\r\n           this.props.getData()\r\n                .then((data) => {\r\n                    this.setState({\r\n                        data,\r\n                        loading: false\r\n                    });\r\n                });\r\n        }\r\n\r\n        componentDidCatch() {\r\n            this.setState({\r\n                hasError: true\r\n            })\r\n        }\r\n\r\n        render() {\r\n            const {data, hasError, loading} = this.state;\r\n\r\n            if (loading) {\r\n               return <Spinner/>\r\n            }\r\n\r\n            if (hasError) {\r\n                return <ErrorIndicator/>\r\n            }\r\n\r\n            if (!data) {\r\n                return (\r\n                    <ul className=\"list-group-flush list\">\r\n                        <Spinner/>\r\n                    </ul>\r\n                )\r\n            }\r\n\r\n            return <View {...this.props} data={data}/>\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default withData;\r\n","import React from \"react\";\r\nimport {SwapiServiceConsumer} from \"../components/swapi-service-context\";\r\n\r\nconst withSwapiService = (mapMethodsToProps) => (Wrapped) => {\r\n    return (props) => {\r\n        return (\r\n            <SwapiServiceConsumer>\r\n                {\r\n                    (swapiService) => {\r\n                        const serviceProps = mapMethodsToProps(swapiService)\r\n                        return (\r\n                            <Wrapped {...props} {...serviceProps}/>\r\n                        )\r\n                    }\r\n                }\r\n            </SwapiServiceConsumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withSwapiService;\r\n","import React from \"react\";\r\nimport {ItemDetails, Record} from \"../item-details\";\r\nimport {withSwapiService} from \"../../hocs\";\r\n\r\nconst PersonDetails = (props) => {\r\n    return (\r\n        <ItemDetails {...props}>\r\n            <Record field=\"birthYear\" label=\"BirthYear:\" />\r\n            <Record field=\"eyeColor\" label=\"Eye Color:\"/>\r\n            <Record field=\"gender\" label=\"Gender:\"/>\r\n        </ItemDetails>\r\n    );\r\n};\r\n\r\nconst mapMethodsToProps = (swapiService) => {\r\n    return {\r\n        getData: swapiService.getPerson,\r\n        getImgUrl: swapiService.getPersonImg\r\n    }\r\n}\r\n\r\nexport default withSwapiService(mapMethodsToProps)(PersonDetails);\r\n","import React from \"react\";\r\nimport {ItemDetails, Record} from \"../item-details\";\r\nimport {withSwapiService} from \"../../hocs\";\r\n\r\nconst PlanetDetails = (props) => {\r\n                    return (\r\n                        <ItemDetails {...props}>\r\n                            <Record field=\"diameter\" label=\"Diameter:\" />\r\n                            <Record field=\"climate\" label=\"Climate:\"/>\r\n                            <Record field=\"population\" label=\"Population:\"/>\r\n                        </ItemDetails>\r\n                    );\r\n};\r\n\r\nconst mapMethodsToProps = (swapiService) => {\r\n    return {\r\n        getData: swapiService.getPlanet,\r\n        getImgUrl: swapiService.getPlanetImg\r\n    }\r\n}\r\n\r\nexport default withSwapiService(mapMethodsToProps)(PlanetDetails);\r\n","import React from \"react\";\r\nimport {ItemDetails, Record} from \"../item-details\";\r\nimport {withSwapiService} from \"../../hocs\";\r\n\r\nconst StarshipDetails = (props) => {\r\n    return (\r\n                        <ItemDetails {...props}>\r\n                            <Record field=\"model\" label=\"Model:\" />\r\n                            <Record field=\"manufacturer\" label=\"Manufacturer:\"/>\r\n                            <Record field=\"cost\" label=\"Cost:\"/>\r\n                            <Record field=\"length\" label=\"Length:\"/>\r\n                            <Record field=\"crew\" label=\"Crew:\"/>\r\n                            <Record field=\"starshipClass\" label=\"Class:\"/>\r\n                            <Record field=\"rating\" label=\"Rating:\"/>\r\n                        </ItemDetails>\r\n    );\r\n};\r\n\r\nconst mapMethodsToProps = (swapiService) => {\r\n    return {\r\n        getData: swapiService.getStarShip,\r\n        getImgUrl: swapiService.getStarShipImg\r\n    }\r\n}\r\n\r\nexport default withSwapiService(mapMethodsToProps)(StarshipDetails);\r\n","import React from 'react';\r\nimport './item-list.css'\r\n\r\n export const ItemList = (props) =>  {\r\n    const {data, onItemSelected, children: renderLabel} = props\r\n\r\n    const items = data.map((item) => {\r\n            const {id} = item\r\n            const label = renderLabel(item);\r\n            return (\r\n                <li className=\"list-group-item list-item\"\r\n                    key={id}\r\n                    onClick={() => onItemSelected(id)}>\r\n                   {label}\r\n                </li>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"flex-grow-1\">\r\n                    <ul className=\"list-group-flush list jumbotron rounded\">\r\n                        {items}\r\n                    </ul>\r\n            </div>\r\n        )\r\n    }\r\n","import React from \"react\";\r\nimport {ItemList} from \"../item-list\";\r\nimport {withData} from \"../../hocs\";\r\nimport {withSwapiService} from \"../../hocs\";\r\nimport {compose} from \"recompose\";\r\n\r\nconst withChildFunction = (fn) => (Wrapped) => {\r\nreturn (props) => {\r\n    return (\r\n<Wrapped {...props}>\r\n    {fn}\r\n</Wrapped>\r\n    )\r\n}\r\n}\r\n\r\nconst renderName = ({name}) => <span>{name}</span>;\r\n    const renderModelAndName = ({name, model}) => <span>{name} ({model})</span>\r\n\r\nconst mapPersonMethodsToProps = (swapiService) => {\r\n    return {\r\n        getData: swapiService.getAllPeople\r\n    }\r\n}\r\n\r\nconst mapPlanetMethodsToProps = (swapiService) => {\r\n    return {\r\n        getData: swapiService.getAllPlanets\r\n    }\r\n}\r\n\r\nconst mapStarshipMethodsToProps = (swapiService) => {\r\n    return {\r\n        getData: swapiService.getAllShips\r\n    }\r\n}\r\n\r\nconst PersonList = compose(\r\n    withSwapiService(mapPersonMethodsToProps),\r\n    withData,\r\n    withChildFunction(renderName))\r\n(ItemList)\r\n\r\nconst PlanetList = compose(\r\n    withSwapiService(mapPlanetMethodsToProps),\r\n    withData,\r\n    withChildFunction(renderName))\r\n(ItemList)\r\nconst StarshipList = compose(\r\n    withSwapiService(mapStarshipMethodsToProps),\r\n    withData,\r\n    withChildFunction(renderModelAndName))\r\n(ItemList)\r\n\r\n\r\n\r\nexport {\r\n    PersonList,\r\n    PlanetList,\r\n    StarshipList\r\n}\r\n","import React from \"react\";\r\nimport {withRouter} from \"react-router-dom\"\r\nimport  {\r\n    PersonList,\r\n    PersonDetails,\r\n} from \"../sw-componenets\"\r\n\r\nconst PeoplePageComponent = ({history, match}) => {\r\n    const { id } = match.params\r\n        return (\r\n                <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n                <PersonList onItemSelected={(id) => history.push(id)}/>\r\n            </div>\r\n        <div className=\"col-md-6\">\r\n            <PersonDetails itemId={id}/>\r\n        </div>\r\n                </div>\r\n        )\r\n}\r\n\r\nexport const PeoplePage = withRouter(PeoplePageComponent)\r\n","import React from \"react\";\r\nimport  {\r\n    PlanetList,\r\n    PlanetDetails,\r\n} from \"../sw-componenets\"\r\n\r\nexport class PlanetPage extends React.Component {\r\n    state = {\r\n        selectedItem: null\r\n    }\r\n\r\n    onItemSelected = (selectedItem) => {\r\n        this.setState({\r\n            selectedItem\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <PlanetList onItemSelected={this.onItemSelected}/>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <PlanetDetails itemId={this.state.selectedItem}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {withRouter} from \"react-router-dom\"\r\nimport  {\r\n    StarshipList,\r\n} from \"../sw-componenets\"\r\n\r\nconst StarshipPageComponent = ({ history }) => {\r\n        return (\r\n                <div className=\"col-md-12\">\r\n                    <StarshipList onItemSelected={(itemId) => history.push(itemId)}/>\r\n                </div>\r\n        );\r\n};\r\n\r\nexport const StarshipPage = withRouter(StarshipPageComponent);\r\n","import React from 'react';\r\nimport {Redirect} from 'react-router-dom'\r\nexport const SecretPage = ({isLoggedIn}) => {\r\n\r\n    if (isLoggedIn) {\r\n\r\n        return (\r\n            <div className=\"jumbotron text-center\">\r\n                <h3>This page is full of secrets!!</h3>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return <Redirect to=\"/login\"/>\r\n}\r\n","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nexport const LoginPage = ({isLoggedIn, onLogin}) => {\r\n\r\n        if(isLoggedIn) {\r\n        return <Redirect to='/'/>\r\n        }\r\n        return (\r\n        <div className=\"jumbotron\">\r\n            <p>Login to see secret page!</p>\r\n            <button\r\n                className='btn btn-primary'\r\n                onClick={onLogin}>\r\n              Login\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport anime from 'animejs';\r\nimport \"./welcome-page.css\"\r\n\r\nexport const WelcomePage = () => {\r\n    const svgRef = React.createRef();\r\n\r\n    useEffect(() => {\r\n        anime({\r\n            targets: svgRef.current.children,\r\n            strokeDashoffset: [anime.setDashoffset, 0],\r\n            easing: 'easeInOutSine',\r\n            duration: 5000,\r\n            direction: 'alternate',\r\n            loop: true\r\n        });\r\n    })\r\n\r\n    return (\r\n  <div style={{textAlign:\"center\"}}>\r\n      <svg width=\"477\" height=\"400\" id=\"starwars-svg\" ref={svgRef}>\r\n          <path stroke=\"yellow\" strokeWidth=\"2\" fill=\"none\"\r\n                d=\"m138.21218,93.0014q-12.99617,0 -15.44503,18.28578t13.93804,40.12047q9.93494,11.32725 -3.3904,10.78087l-14.31479,0l0,29.34147l36.16388,0q14.69057,-3.54704 14.9741,-21.83422t-14.9741,-37.66573q-8.52342,-10.23495 3.57878,-9.68857l13.70274,0l0,-29.34007l-34.23321,0zm-4.89739,73.28241q17.89357,-0.68146 6.02731,-17.60386q-16.01047,-21.56034 -13.46711,-36.43602t12.33719,-15.14725l31.40793,0l0,21.15183l-10.87745,0q-15.63437,-0.40944 -8.10071,13.78293q16.19917,19.92259 16.57656,35.75177t-12.05463,19.65103l-33.3386,0l0,-21.15043l11.48951,0zm38.55198,-73.28241l0,29.33961l18.74093,0l0,69.18899l22.13133,0l0,-69.18899l18.74093,0l0,-29.33961l-59.61318,0zm56.78854,4.09389l0,21.15183l-18.74093,0l0,69.18713l-16.48109,0l0,-69.18713l-18.74093,0l0,-21.15183l53.96294,0zm19.28097,94.43471l4.28502,-17.74034l20.20034,0l4.28502,17.74034l25.71011,0l-22.74306,-98.52673l-33.7626,0l-22.36728,98.52673l24.39246,0zm4.51968,-37.66386l20.0589,0l-9.65334,-40.4619l-10.40555,40.4619zm-4.1918,-56.76898l29.57402,0l20.71788,90.33896l-19.44813,0l-4.42646,-17.74034l-24.25069,0l-4.37824,17.74034l-18.5532,0l20.76482,-90.33896zm14.64557,30.70439l5.17867,21.9707l-11.20598,0l6.02731,-21.9707zm63.49091,63.72845l0,-32.54848l21.56653,32.54662l24.01282,0l0,-29.33961l-17.51618,0l-5.08545,-9.41608q7.91266,-2.72817 12.14785,-7.50538a17.6049,25.50983 0 0 0 5.98231,-12.35014q1.74069,-7.57386 0.98687,-13.98741t-2.54272,-10.84887q-1.78891,-4.43439 -6.73452,-9.2116t-13.13472,-5.86904l-44.26459,0l0,98.52999l24.58179,0zm-21.75619,-94.43285l41.43898,0q7.24724,0.95582 11.72353,5.32173t5.95659,8.08577q1.48513,3.71985 2.02518,9.38161a17.49657,25.35285 0 0 1 -0.94187,11.87269a16.2072,23.48454 0 0 1 -5.03723,10.50744q-3.55853,4.29884 -13.25687,7.16442l0,5.7293l6.26198,11.12183l16.33964,0l0,21.15183l-19.54135,0l-21.47009,-32.54662l-4.5679,0l0,32.54662l-18.93059,0l0,-90.33849l0,0.00186zm20.57644,40.39297l19.07203,0q1.50442,0 3.27243,-1.77375t1.95446,-8.80356q-0.33271,-6.75405 -2.16662,-8.90417t-3.10849,-2.14919l-19.02381,0l0,21.62881l0,0.00186zm17.42295,-17.67186q0.94026,0 2.37878,1.39739t1.67157,5.62915q-0.09644,4.64073 -1.48192,5.76563a5.27639,7.64559 0 0 1 -2.52022,1.12583l-14.54913,0l0,-13.91987l14.50091,0l0,0.00186z\"\r\n                className=\"cls-1\" id=\"Color_Fill_1\"/>\r\n          <path stroke=\"yellow\" strokeWidth=\"2\" fill=\"none\"\r\n                d=\"m63.62355,197.60477l12.96332,37.47817l5.62884,0l11.78494,-37.47817l22.26019,0l13.68462,37.47817l4.38657,0l9.68966,-37.47817l21.54007,0l0,-3.60368l-24.68201,0l-8.77314,37.47817l-13.15972,-37.47817l-28.28379,0l-11.26083,37.47817l-12.96135,-37.47817l-23.44093,0l0,3.60368l20.62355,0zm81.44638,79.5191l-24.8792,0l-12.2432,-36.69383l-5.36855,0l-10.34431,36.69528l-24.4864,0l-20.81995,-60.90158l-3.92831,0l0,3.60368l0.78558,0l20.68902,60.90158l30.77147,0l9.95191,-36.75678l11.98134,36.75678l30.77147,0l16.82617,-60.90158l0.78558,0l0,-3.60368l-3.92831,0l-16.56431,60.90013zm21.20288,3.60368l26.84355,0l6.02321,-15.61584l28.02272,0l6.02202,15.61584l26.84473,0l0,-3.60224l-24.22612,0l-6.02202,-15.61584l-33.26034,0l-6.02321,15.61584l-24.22454,0l0,3.60368l0,-0.00145zm71.7583,-86.72647l-47.79759,0l-23.1771,60.90194l-0.78558,0l0,3.60368l4.05925,0l23.1771,-60.90194l41.25066,0l21.34328,60.90194l3.92792,0l0,-3.60368l-0.7848,0l-21.21314,-60.90194zm-38.62968,53.57446l27.891,0l-13.42197,-35.61754l-14.46902,35.61754zm14.5337,-22.94332l7.2004,19.33964l-15.57996,0l8.37956,-19.33964zm112.51678,-27.02745q10.08009,0.8415 16.30324,4.68468t8.28176,7.11729q2.05861,3.2741 2.81185,8.25834t-1.30931,10.45072a22.48103,20.62323 0 0 1 -7.004,9.24925q-4.94539,3.78421 -18.42889,6.30654l0,5.04501l8.70768,9.79011l26.64755,0l0,-3.60368l-24.35626,0l-7.07105,-8.28837q10.99699,-2.40185 16.89085,-6.60681a24.44184,22.422 0 0 0 8.31331,-10.87111q2.42537,-6.66651 1.37635,-12.31244t-3.53355,-9.55098q-2.49044,-3.90324 -9.36233,-8.1082q-6.87978,-4.20315 -18.2672,-5.16512l-61.54452,0l0,3.60368l61.54531,0l-0.00079,0.00109zm-29.00588,35.55604l26.51741,0q2.0941,0 4.55102,-1.56144t2.71721,-7.74787q-0.46141,-5.94584 -3.01298,-7.83795t-4.32229,-1.89211l-26.45036,0l0,19.03936zm24.22612,-15.55651q1.30733,0 3.30482,1.23005t2.32678,4.95638q-0.13606,4.08485 -2.06255,5.07504a7.32502,6.71969 0 0 1 -3.50595,0.99091l-20.22721,0l0,-12.25166l20.16411,0l0,-0.00072zm-56.76476,63.12471l34.17606,0l0,-28.64967l29.98786,28.64895l33.39127,0l0,-3.60296l-31.09998,0l-29.85377,-28.64895l-6.35329,0l0,28.64895l-30.24814,0l0,3.60368zm0,-64.50526l0,42.28296l3.92792,0l0,-42.28296l-3.92792,0zm124.45513,-22.22266q-18.07198,0 -21.47736,16.09629t19.37932,35.31582q13.81279,9.97064 -4.71272,9.48983l-15.97591,0l0,3.60368l15.97591,0q24.88077,-0.59983 8.38035,-15.49573q-22.26019,-18.97858 -18.72467,-32.07283t17.15507,-13.33338l47.59646,0l0,-3.60368l-47.59646,0zm47.59646,22.22266l-19.05199,0q-21.73962,-0.36178 -11.26319,12.13227q22.52639,17.53798 23.04696,31.47191q0.52648,13.93466 -16.7607,17.29739l-46.35419,0l0,3.60368l46.35419,0q20.42637,-3.12216 20.81877,-19.21953t-20.81877,-33.15346q-11.84883,-9.00831 4.97694,-8.52859l19.05199,0l0,-3.60368z\"\r\n                className=\"cls-1\" id=\"Color_Fill_2\"/>\r\n          <path stroke=\"yellow\" strokeWidth=\"2\" fill=\"none\"\r\n                d=\"m197.84386,343.95435l14.62627,0q4.95484,0 7.98651,-2.1393a16.14404,17.06825 0 0 0 4.93161,-5.46544q1.90029,-3.33172 2.47777,-11.92798q-0.19284,-7.88564 -2.18921,-11.64894a15.31495,16.19169 0 0 0 -5.12375,-5.8747q-3.12809,-2.10953 -8.179,-2.11325l-14.5302,0l0,39.16961zm-21.84281,17.49759l39.83576,0q9.52645,0.20091 15.85301,-2.03512t10.70674,-6.30628q4.37595,-4.07397 7.02404,-11.09086t3.17419,-17.29297q0,-10.58115 -2.91026,-17.34505t-7.21654,-10.88623q-4.30733,-4.12047 -10.72891,-6.30739t-14.74486,-2.18729l-40.99424,0l0,3.05082l40.99283,0q8.37149,-0.20277 14.38521,2.13632t9.38322,5.80029q3.36774,3.46008 4.95484,6.76502a54.85265,57.99283 0 0 1 2.59707,6.20582q1.01349,2.902 1.39707,12.76882q-0.29032,10.27421 -3.07918,16.53026t-6.06334,9.46128a26.26239,27.76585 0 0 1 -8.22721,5.29058q-4.95624,2.08721 -16.50439,2.38857l-39.83611,0l0,3.05455l0.00106,-0.00112zm36.37301,-53.61266q4.81056,0.10045 7.19261,2.10953a13.05008,13.79717 0 0 1 3.68059,4.88132q1.29924,2.87968 1.73208,9.59149q-0.57748,7.98609 -1.75601,10.22398a13.49173,14.26409 0 0 1 -3.48844,4.1707q-2.30921,1.93095 -7.26475,2.08349l-11.69137,0l-0.04786,-33.06052l11.64316,0zm-33.48632,34.79056l0,-35.80998l-2.88563,0l0,35.80998l2.88563,0zm100.81193,-24.51821l15.44164,0q4.13841,0.05581 7.04868,-1.88258q2.91378,-1.93095 2.91378,-4.82923q0.14076,-3.35963 -2.72023,-5.08967t-7.24223,-1.77878l-15.44164,0l0,13.57989l0,0.00037zm15.54017,-10.52907q3.8956,0.20649 5.41231,1.04547a2.82053,2.98199 0 0 1 1.56246,2.77179a3.82416,4.04309 0 0 1 -1.90029,2.61924q-1.37243,0.73666 -5.17302,1.04174l-12.55601,0l0,-7.47824l12.65454,0zm9.62111,-16.53063q10.29853,0.15254 15.44516,3.43329t6.20762,11.31893q0.48035,7.02062 -2.91378,10.72997q-3.38886,3.7168 -11.61642,6.15746l0,3.30382q6.35014,1.42868 9.09325,2.87596a17.80117,18.82024 0 0 1 4.47273,3.22941a14.6495,15.48814 0 0 1 2.83988,4.07025a10.23695,10.82299 0 0 1 1.10498,4.98549q0.19003,6.81413 -3.07918,10.8081t-9.55073,5.31662q-6.27624,1.32264 -15.5648,1.11616l-43.8299,0l0,3.05455l43.8299,0q9.43284,0.10045 16.04691,-1.27242t10.82463,-5.84865q4.21232,-4.47578 4.2088,-13.17435a12.95014,13.69151 0 0 0 -1.2,-5.59566a15.64363,16.53919 0 0 0 -3.39237,-5.11199a20.3838,21.55073 0 0 0 -5.41231,-3.91771a22.44633,23.73132 0 0 0 -7.02404,-2.16162l0,-0.20463q7.74193,-2.69552 11.11319,-6.86436q3.36774,-4.17442 2.9349,-11.4964q-1.25103,-9.56359 -7.19296,-13.63309t-17.34545,-4.17107l-47.39118,0l0,3.05082l47.39118,0l0,0.00112zm-25.16128,57.22566l18.23225,0q5.05161,0.14882 8.47038,-2.28812t3.31847,-6.10537q0.3871,-3.96793 -3.02991,-6.35836t-8.75894,-2.18766l-18.23225,0l0,16.93952zm18.23225,-13.88869q5.05161,0.10603 7.00293,1.42496t1.90029,4.07025a4.96187,5.24593 0 0 1 -2.06921,3.86562q-1.77888,1.32264 -6.83401,1.42496l-15.34662,0l0,-10.78578l15.34662,0zm-40.46215,-27.56904l0,35.80998l2.88915,0l0,-35.80998l-2.88915,0z\"\r\n                className=\"cls-2\" id=\"Color_Fill_3\"/>\r\n      </svg>\r\n  </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\r\nimport {Header} from '../header'\r\nimport {RandomPlanet} from \"../random-planet\";\r\nimport {ErrorIndicator} from \"../error-indicator\";\r\nimport {SwapiService} from \"../../services/swapi-service\";\r\nimport {MockSwapiServices} from \"../../services/mock-swapi-services\";\r\nimport {SwapiServiceProvider} from \"../swapi-service-context\";\r\nimport {PeoplePage, PlanetPage, StarshipPage, LoginPage ,SecretPage} from \"../pages\";\r\nimport {StarshipDetails} from \"../sw-componenets/\";\r\nimport {WelcomePage} from \"../welcome-page/welcome-page\";\r\nimport \"./app.css\"\r\n\r\nexport class App extends React.Component {\r\n\r\n    state = {\r\n        showRandomPlanet: true,\r\n        hasError: false,\r\n        swapiService: new SwapiService(),\r\n        isLoggedIn: false\r\n    }\r\n\r\n    onLogin = () => {\r\n        this.setState({\r\n            isLoggedIn: true\r\n        });\r\n    };\r\n\r\n    onDataChange = () => {\r\n    this.setState(({swapiService}) => {\r\n        const Service = swapiService instanceof SwapiService ? MockSwapiServices : SwapiService;\r\n\r\n        return {\r\n            swapiService: new Service()\r\n        };\r\n    });\r\n    };\r\n\r\n   toggleRandomPlanet = () => {\r\n        this.setState((state) => {\r\n            return {\r\n                showRandomPlanet: !state.showRandomPlanet\r\n            }\r\n        })\r\n   };\r\n\r\n   componentDidCatch() {\r\n        this.setState({\r\n            hasError: true\r\n        })\r\n   };\r\n\r\n    render() {\r\n\r\n        const {isLoggedIn} = this.state;\r\n\r\n        if(this.state.hasError){\r\n            return <ErrorIndicator/>\r\n        };\r\n\r\n        const planet = this.state.showRandomPlanet ? <RandomPlanet/> : null;\r\n        const status = this.state.swapiService instanceof SwapiService ? \"Get Mock Data\" : \"Get Api Data\";\r\n        return (\r\n            <SwapiServiceProvider value={this.state.swapiService}>\r\n                <HashRouter basename={process.env.PUBLIC_URL}>\r\n            <div>\r\n                <Header onDataChange={this.onDataChange} status={status}/>\r\n                {planet}\r\n                <button\r\n                    type=\"button\" className=\"btn btn-success random-planet-button\"\r\n                    onClick={this.toggleRandomPlanet}>Toggle\r\n                    Random Planet\r\n                </button>\r\n                <Switch>\r\n                <Route exact path=\"/\" component={WelcomePage}/>\r\n                        <Route exact path=\"/people/:id?\" component={PeoplePage}/>\r\n                        <Route exact path=\"/planets\" component={PlanetPage}/>\r\n                        <Route exact path=\"/starships\" component={StarshipPage}/>\r\n                        <Route exact path=\"/starships/:id\"\r\n                               render={({ match }) => {\r\n                                   const {id} = match.params\r\n                                 return  <StarshipDetails itemId={id}/>\r\n                               }}/>\r\n                               <Route\r\n                                   path=\"/login\"\r\n                                   render={() => (\r\n                                   <LoginPage isLoggedIn={isLoggedIn} onLogin={this.onLogin}/>\r\n                                   )}/>\r\n                    <Route\r\n                        path=\"/secret\"\r\n                        render={() => (\r\n                            <SecretPage isLoggedIn={isLoggedIn}/>\r\n                        )}/>\r\n                    <Route render={() => <h1>Page not found</h1>}/>\r\n                </Switch>\r\n            </div>\r\n                </HashRouter>\r\n            </SwapiServiceProvider>\r\n        );\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport {App} from './components/app'\r\n\r\n\r\nReactDOM.render(\r\n    <App/>, document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}